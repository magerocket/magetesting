[production]
;Magento installation Stuff
magento.adminEmail = "someone@email.com"
magento.storeUrl = "http://magetesting.dev"
magento.enterpriseEnabled = 0
magento.currentServerId = 1

wget.timeout = 300;
wget.tries = 3;

;this addresses go to account email notifications
magento.ftphost = "ftp://magetesting.com"
magento.dbhost = "http://localhost/phpdb"

magento.standardUser.stores = 0

magento.storeTimeExecution = 1

magento.storeprefix = "INST_"

;IMPORTANT - check Application_Form_UserRegister::init(); for setting up length
magento.userprefix = "mi_"

magento.usersalt = "something" ;used for mysql user password creation
magento.systemHomeFolder = "/home" ;where should user store folders land in

;SQL Limit on imported files in bytes - 536870912 by default (500mb)
magento.sqlDumpByteLimit = 536870912
magento.storeDumpByteLimit = 1073741824

google.analyticsId = ""

; ADMIN EMAIL NOTIFICATION
adminNotification.from.email = "someone@email.com"
adminNotification.from.desc = "Mage Testing"
adminNotification.globalEmails[] = "someone@email.com"
adminNotification.globalEmails[] = "someone@email.com"

adminNotification.userCreated.subject = "New user registered"
adminNotification.userCreated.template = "user-created.phtml"
;adminNotification.userCreated.emails[] = "someone@email.com"
;adminNotification.userCreated.emails[] = "someone@email.com"

adminNotification.boughtPlan.subject = "User bought a plan"
adminNotification.boughtPlan.template = "bought-plan.phtml"

adminNotification.renewedPlan.subject = "User renewed a plan"
adminNotification.renewedPlan.template = "renewed-plan.phtml"

adminNotification.boughtExtension.subject = "User bought an extension"
adminNotification.boughtExtension.template = "bought-extension.phtml"

adminNotification.changedPlan.subject = "User changed a plan"
adminNotification.changedPlan.template = "changed-plan.phtml"

adminNotification.additionalStores.subject = "User purchased additional stores"
adminNotification.additionalStores.template = "additional-stores.phtml"
; END

user.activationEmail.subject = "Activate your account for magetesting.com"
user.activationEmail.from.email = "someone@email.com"
user.activationEmail.from.desc = "Mage Testing"

user.resetPassword.subject = "Password reset for magetesting.com"
user.resetPassword.from.email = "someone@email.com"
user.resetPassword.from.desc = "Mage Testing"

cron.queueItemReady.subject = "Your Magento store is ready at magetesting.com"
cron.queueItemReady.from.email = "someone@email.com"
cron.queueItemReady.from.desc = "Mage Testing"

cron.ftpAccountCreated.subject = "FTP account created for magetesting.com"
cron.ftpAccountCreated.from.email = "someone@email.com"
cron.ftpAccountCreated.from.desc = "Mage Testing"

cron.phpmyadminAccountCreated.subject = "Database account created for magetesting.com"
cron.phpmyadminAccountCreated.from.email = "someone@email.com"
cron.phpmyadminAccountCreated.from.desc = "Mage Testing"

cron.buyStoreExtension.subject = "Buy %s at magetesting.com"
cron.buyStoreExtension.from.email = "someone@email.com"
cron.buyStoreExtension.from.desc = "Mage Testing"

admin.errorEmail.subject = "Errors with Magetesting.com"
admin.errorEmail.from.email = "someone@email.com"
admin.errorEmail.to.email[] = "someone@email.com"

register.useCoupons = 0; // 0 - dont show coupon field, 1 - show coupon field
register.freeTrialCouponsPerDay = 10;

contact.message.subject = "Message from Contact Form"
contact.message.from.email = "someone@email.com"
contact.message.from.desc = "Mage Testing"
contact.message.emails[] = "someone@email.com"
contact.message.emails[] = "someone@email.com"

;SQL Updater
; remember that this must be absolute path
sqlUpdater.directoryPath = APPLICATION_PATH "/../scripts/db";

;Extensions
extension.directoryPath = APPLICATION_PATH "/../data/extensions";

;Braintree
braintree.environment = ;this is either sandbox or production
;Following id/keys can be found after logging in to your braintree account (eg. sandbox.braintreegateway.com)
braintree.merchantId = 
braintree.publicKey = 
braintree.privateKey = 

;Papertrail
papertrail.username = "username";
papertrail.password = "password";
papertrail.ssoSalt = "salt";
papertrail.distributorName = "Mage Testing";
papertrail.url = "https://papertrailapp.com/api/v1/";
papertrail.prefix = "dev-";


;Privileged db (required on store servers)
dbPrivileged.params.charset = UTF8
dbPrivileged.params.host = localhost
dbPrivileged.params.username =
dbPrivileged.params.password =
dbPrivileged.params.dbname = mysql

;SSL
ssl.active = 0

;Mcrypt
mcrypt.key = "thekey"
mcrypt.vector = "thevector" 

; QUEUE RETRY COUNT SYSTEM
; UNITS: MICROSECOND, SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, QUARTER, or YEAR
queueRetry.global.delay.unit = "MINUTE"
queueRetry.global.delay.interval = 10
queueRetry.global.retries = 1

queueRetry.PapertrailUserCreate.retries = 3
queueRetry.PapertrailUserRemove.retries = 3
queueRetry.PapertrailSystemCreate.retries = 3
queueRetry.PapertrailSystemRemove.retries = 3
queueRetry.MagentoDownload.retries = 3

; Exec wrapper
execWrapper.logEnabled = 1;

; IONCUBE CONFIGURATION
ioncubeEncoder.server.host = ""
ioncubeEncoder.server.port = ""
ioncubeEncoder.server.user = ""
ioncubeEncoder.server.pass = ""
ioncubeEncoder.encode.allowedServer = "#{username}.sv#{serverNumber}.magetesting.com"
ioncubeEncoder.encode.obfuscationKey = "random_key!1234#"
ioncubeEncoder.encode.additionalComment = "Licensed to #{username}.sv#{serverNumber}.magetesting.com user."
; best way is to add permissions for ssh user,
; that he can do in below paths everything
; permissions:
; read for enterprisePackagesPath
; read/write for codingTmpPath
ioncubeEncoder.codingTmpPath = "/path/where/cli/can/do/stuff"
; filenames should look like '{$version}.tar.gz'
ioncubeEncoder.enterprisePackagesPath = "/path/to/tars/with/packed/enterprise"
; for example: /usr/local/ioncube/ioncube_encoder53
ioncubeEncoder.executablePath = ""

[staging : production]

[testing : production]

[development : production]
user.activationEmail.subject = "[DEV]Activate your account for magetesting.com"
user.resetPassword.subject = "[DEV][DEV]Password reset for magetesting.com"
cron.queueItemReady.subject = "[DEV]Your Magento store is ready at magetesting.com"
cron.ftpAccountCreated.subject = "[DEV]FTP account created for magetesting.com"
cron.phpmyadminAccountCreated.subject = "[DEV]Database account created for magetesting.com"
cron.buyStoreExtension.subject = "[DEV]Buy %s at magetesting.com"
admin.errorEmail.subject = "[DEV]Errors with Magetesting.com"
contact.message.subject = "[DEV]Message from Contact Form"

